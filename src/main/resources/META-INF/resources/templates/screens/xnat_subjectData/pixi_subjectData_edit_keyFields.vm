<!-- BEGIN xnat-templates/screens/xnat_subjectData/pixi_subjectData_edit_keyFields.vm -->

<script type="text/javascript">
    // Get subject's demographics XSI type. NEW subjects will be empty, existing subjects should have a type defined
    const subjectDemographicXsiType = "$!subject.getDemographics().getXSIType()" ;
    console.debug(`Subject demographic type: ${subjectDemographicXsiType}` );

    const projectElId = "xnat:subjectData/project";

    // Demographic XSI types
    let demographicPreference = "";
    const xnatDemographics = "xnat:demographicData";
    const pixiDemographics = "pixi:animalDemographicData";

    const xnatDemographicEl = document.getElementById("xnat-demographics");
    const pixiDemographicEl = document.getElementById("pixi-demographics");

    function displayXnatDemographicForm() {
        console.debug("Displaying XNAT demographic form.");
        xnatDemographicEl.style.display = "";
        pixiDemographicEl.style.display = "none";
    }

    function displayPixiDemographicsForm() {
        console.debug("Displaying PIXI demographic form.");
        xnatDemographicEl.style.display = "none";
        pixiDemographicEl.style.display = "";
    }

    function displayProjectPreferredDemographicForm() {
        console.debug("Fetching preferred demographics...");

        const projectSelectElement = document.getElementById(projectElId);
        const selectedProject = projectSelectElement.value;

        let url = '/xapi/pixi/preferences/demographicDataImpl';
        url = XNAT.url.csrfUrl(selectedProject ? `${url}/projects/${selectedProject}` : url);

        XNAT.xhr.get({
            url: url,
            dataType: 'json',
            success: function(data) {
                demographicPreference = data['demographicDataImpl'];
                console.debug(`Successfully retrieved demographic preference: ${demographicPreference}`);
                if (demographicPreference === xnatDemographics) {
                    displayXnatDemographicForm();
                } else if (demographicPreference === pixiDemographics) {
                    displayPixiDemographicsForm();
                }
            },
            error: function() {
                console.error("Could not fetch demographic preference. Defaulting to XNAT core demographics.");
                displayXnatDemographicForm();
            }
        });
    }

    function handleProjectChange() {
        console.debug("Handling project change...")
        displayProjectPreferredDemographicForm();
    }

    window.addEventListener('load', () => {
        // If subject demographic type is already set then display the appropriate form
        if (subjectDemographicXsiType === xnatDemographics) {
            displayXnatDemographicForm();
        } else if (subjectDemographicXsiType === pixiDemographics) {
            displayPixiDemographicsForm();
        } else {
            // If not set then fetch the preferred demographic type
            displayProjectPreferredDemographicForm();

            // Add event listener for handling new subject creation.
            const projectSelectElement = document.getElementById(projectElId);
            if(typeof projectSelectElement !== 'undefined' && projectSelectElement !== null && projectSelectElement.tagName === 'SELECT') {
                $(document.getElementById(projectElId)).chosen().change(handleProjectChange);
            }
            console.debug("Demographics selector event listener added.");
        }
    });
</script>

## CSS Link and JS script required for FormIO are in xnat-templates/navigations/BaseJS.vm file
#parse('screens/formsioJSIncludes.vm')

<script src="$content.getURI("/scripts/xnat/plugin/pixi/pixi-module.js")"></script>
<script src="$content.getURI("/scripts/xnat/plugin/pixi/pixi-xenograft.js")"></script>

<div id="formio-subject"  data-id="$!om.getId()" data-type="$!om.getXSIType()" data-project="$!om.getProject()"></div>

<script type="text/javascript">

    let formIOObjSubj = undefined;
    let formData= undefined;

    function initForm() {

        formData = {};
        #if ("$!om.getId()" != "")
            #set($properties = [
                "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/species",
                "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/strain",
                "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/source",
                "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/stockNumber",
                "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/geneticModifications",
                "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/sex",
                "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/dateOfBirth",
                "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/litter"
            ])
            #foreach($property in $properties)
                #if($om.getProperty($property))
                    formData["$property"] = "$om.getProperty($property)";
                #end
            #end
        #end

         dates = ["xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/dateOfBirth"]

        // Adjust date to UTC time
         dates.forEach(date => {
             if (date in formData) {
                 let adjustedDate = new Date(formData[date]);
                 adjustedDate = new Date(adjustedDate.getTime() + adjustedDate.getTimezoneOffset() * 60000);

                 formData[date] = adjustedDate;
             }
         })

        let formOptions = {};
        let formComponents = {
            "display": "form",
            "title": "Animal Subject",
            "components": [
                {
                    "label": "Columns",
                    "columns": [
                        {
                            "components": [
                                {
                                    "label": "Species",
                                    "widget": "html5",
                                    "tableView": true,
                                    "dataSrc": "custom",
                                    "data": {
                                        "custom": "var values;\nXNAT.xhr.get({\n  url: XNAT.url.restUrl('/xapi/pixi/preferences/species'),\n  dataType: 'json',\n  async: false,\n  success: function(data) {\n    data = data[\"species\"];\n    data.sort((a,b) => a.id - b.id);\n    values = data;\n  }\n});"
                                    },
                                    "valueProperty": "scientificName",
                                    "template": "<span>{{ item.commonName }} / {{ item.scientificName }}</span>",
                                    "key": "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/species",
                                    "type": "select",
                                    "input": true
                                },
                                {
                                    "label": "Sex",
                                    "widget": "html5",
                                    "tableView": true,
                                    "data": {
                                        "values": [
                                            {
                                                "label": "Male",
                                                "value": "male"
                                            },
                                            {
                                                "label": "Female",
                                                "value": "female"
                                            }
                                        ]
                                    },
                                    "key": "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/sex",
                                    "type": "select",
                                    "input": true
                                },
                                {
                                    "label": "Date of Birth",
                                    "format": "yyyy-MM-dd",
                                    "tableView": false,
                                    "enableMinDateInput": false,
                                    "datePicker": {
                                        "disableWeekends": false,
                                        "disableWeekdays": false
                                    },
                                    "enableMaxDateInput": false,
                                    "enableTime": false,
                                    "key": "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/dateOfBirth",
                                    "type": "datetime",
                                    "input": true,
                                    "widget": {
                                        "type": "calendar",
                                        "displayInTimezone": "utc",
                                        "locale": "en",
                                        "useLocaleSettings": false,
                                        "allowInput": true,
                                        "mode": "single",
                                        "enableTime": false,
                                        "noCalendar": false,
                                        "format": "yyyy-MM-dd",
                                        "hourIncrement": 1,
                                        "minuteIncrement": 1,
                                        "time_24hr": false,
                                        "minDate": null,
                                        "disableWeekends": false,
                                        "disableWeekdays": false,
                                        "maxDate": null
                                    }
                                },
                                {
                                    "label": "Litter ID",
                                    "tableView": true,
                                    "key": "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/litter",
                                    "type": "textfield",
                                    "input": true
                                }
                            ],
                            "width": 6,
                            "offset": 0,
                            "push": 0,
                            "pull": 0,
                            "size": "md",
                            "currentWidth": 6
                        },
                        {
                            "components": [
                                {
                                    "label": "Strain",
                                    "tableView": true,
                                    "key": "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/strain",
                                    "type": "textfield",
                                    "input": true
                                },
                                {
                                    "label": "Strain Source / Vendor",
                                    "widget": "html5",
                                    "tableView": true,
                                    "dataSrc": "custom",
                                    "data": {
                                        "custom": "var values;\nXNAT.xhr.get({\n  url: XNAT.url.restUrl('/xapi/pixi/preferences/vendors'),\n  dataType: 'json',\n  async: false,\n  success: function(data) {\n    data = data[\"vendors\"];\n    data.sort((a,b) => a.id - b.id);\n    values = data;\n  }\n});"
                                    },
                                    "valueProperty": "vendor",
                                    "template": "<span>{{ item.vendor }}</span>",
                                    "key": "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/source",
                                    "type": "select",
                                    "input": true
                                },
                                {
                                    "label": "Stock Number",
                                    "tableView": true,
                                    "key": "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/stockNumber",
                                    "type": "textfield",
                                    "input": true
                                },
                                {
                                    "label": "Genetic Modifications",
                                    "tableView": true,
                                    "key": "xnat:subjectData/demographics[@xsi:type=pixi:animalDemographicData]/geneticModifications",
                                    "type": "textfield",
                                    "input": true
                                }
                            ],
                            "width": 6,
                            "offset": 0,
                            "push": 0,
                            "pull": 0,
                            "size": "md",
                            "currentWidth": 6
                        }
                    ],
                    "key": "columns",
                    "type": "columns",
                    "input": false,
                    "tableView": false
                }
            ]};


        Formio.createForm(document.getElementById('formio-subject'), formComponents, formOptions).then(form => {
            form.submission = {data:formData};
            formIOObjSubj = form;
            console.debug("FormIO form initialized.")
        });

    }

    /*
     * The following function is used by the FormsIO to rename the name of the HTML elements to conform to XNAT expectations
     */
    function modifyElementNames() {
        var pattern = /^data\[(.*?)\]$/;
        var pattern2 = /^(data\[.*?\])(\[.*?\])$/;
        try{
            $(".form-control, .form-check-input").each(function(i, elt) {
                var name =  $(elt).attr("name");
                if (typeof name !== typeof undefined && name !== false) {
                    if(pattern2.test(name)) {
                        var match = pattern2.exec(name);
                        var fieldName = match[1].replace(/^data\[/,'').replace(/\]$/,'');
                        $(elt).attr("name",fieldName);
                    }else if (pattern.test(name)) {
                        var fieldName = name.replace(/^data\[/,'').replace(/\]$/,'');
                        $(elt).attr("name",fieldName);
                    }
                }
            });
        }catch(error){
            console.log(error)
        }
        console.debug("FormIO HTML element names modified to match XNAT format.")
    }

    function validate(){
        let isValid = true;

        // If pixi demographics then validate with formio
        console.debug("Submitting...")
        if (demographicPreference === pixiDemographics || subjectDemographicXsiType === pixiDemographics) {

            if (typeof formIOObjSubj !== undefined) {
                isValid = formIOObjSubj.checkValidity(formIOObjSubj.submission.data);
                if (!isValid) {
                    console.debug("FormIO form is invalid.")
                    formIOObjSubj.submit();
                } else {
                    console.debug("FormIO form is valid.")
                }
            }

            if (!isValid) {
                return false;
            }
            modifyElementNames();
        }

        return isValid;
    }

    initForm();

    formsIOValidator={
        form: YUIDOM.get("editSubjectForm"),
        priority : 0,
        validate : function() {
            return validate();
        }
    }

    YAHOO.util.Event.onDOMReady(function(){
        _addFormValidation(formsIOValidator);
    });

</script>

<div id="formio"  data-id="$!om.getId()" data-type="$!om.getXSIType()" data-project="$!om.getProject()"></div>
<!-- END xnat-templates/screens/xnat_subjectData/pixi_subjectData_edit_keyFields.vm -->